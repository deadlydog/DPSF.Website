<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<!-- saved from url=(0029)http://www.helpandmanual.com/ -->
<head>
   <title>DPSF 2.3.0 to 2.4.0</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="" />
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
<script type="text/javascript" src="helpman_topicinit.js"></script>
<!-- Redirect browser to frame page if page is not in the content frame. -->
<script type="text/javascript">
<!--
if (location.search.lastIndexOf("toc=0")<=0) {
  if (parent.frames.length==0) { parent.location.href="index.html?dpsf_2_3_0_to_2_4_0.htm"; }
  else { parent.quicksync('a11.1'); }
}
//-->
</script>
<script type="text/javascript" src="highlight.js"></script></head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;" onload="highlight();">
<div id="hmpopupDiv" style="visibility:hidden; position:absolute; z-index:1000; "></div>


<table width="100%" border="0" cellspacing="0" cellpadding="5" bgcolor="#D0D0D0">
  <tr valign="middle">
    <td align="left">
      <p class="p_Heading1"><span class="f_Heading1">DPSF 2.3.0 to 2.4.0</span></p>

    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="introduction.htm">Top</a>&nbsp;
     <a href="updating_your_existing_particle_systems_to_newer_versions_of_dpsf.htm">Previous</a>&nbsp;
     <a href="dpsf_2_2_2_to_2_3_0.htm">Next</a>
     </span>
    </td>
  </tr>
</table>


<!-- Placeholder for topic body. -->
<table width="100%" border="0" cellspacing="0" cellpadding="5"><tr valign="top"><td align="left">
<p><span style="font-size: 12pt; font-weight: bold;">1 - Changed the ParticleEmitterCollection's Add() function to return back the new ParticleEmitter object, rather than the new object's ID.</span></p>
<p>&nbsp;</p>
<p>If you were previously doing:</p>
<p>&nbsp;</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp;int id = Emitters.Add(newEmitter);</p>
<p>&nbsp;</p>
<p>you will need to change it to:</p>
<p>&nbsp;</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp;int id = Emitters.Add(newEmitter).ID;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; font-weight: bold;">2 - Fixed the DefaultSpriteParticleSystem to draw transparency.</span></p>
<p>&nbsp;</p>
<p><span style="color: #000000;">The DefaultSpriteParticleSystem was updated to use BlendState.NonPremultipled by default so that transparency is drawn. &nbsp;So if you were inheriting from this particle system, your particle may no longer be fully opaque. &nbsp;To fix this problem you can either:</span></p>
<p>&nbsp;</p>
<p><span style="color: #000000;">1. Update your particle system's Initialize Particle Function and Particle Update Functions to ensure that they do not change the particle color's alpha value (i.e. transparency value).</span></p>
<p>&nbsp;</p>
<p><span style="color: #000000;">2. Add the following code to your particle system to reintroduce the old bug so that your particles are drawn the same way as before.</span></p>
<p>&nbsp;</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp;<span style="color: #000000;">protected override void InitializeRenderProperties()</span></p>
<p> &nbsp; &nbsp; &nbsp; &nbsp;<span style="color: #000000;">{</span></p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style="color: #000000;">RenderProperties.BlendState = DPSFHelper.CloneBlendState(BlendState.AlphaBlend);</span></p>
<p> &nbsp; &nbsp; &nbsp; &nbsp;<span style="color: #000000;">}</span></p>
<p>&nbsp;</p>
<p>Obviously option #1 is preferred/recommended approach.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; font-weight: bold;">3 - Renamed IndexBufferReach to IndexBufferShort.</span></p>
<p>&nbsp;</p>
<p>If you were writing your own Vertex Update Function, you may need to update it to reference the IndexBufferShort array instead of the old IndexBufferReach array.</p>
<p>This array was renamed because even though MonoGame for WinRT does not use the Reach profile, it still needs to use the Short Index Buffer array.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; font-weight: bold;">4 - When writing to the Index Buffer, you should check IsUsingIntegerIndexBuffer instead of using "this.GraphicsDevice.GraphicsProfile == GraphicsProfile.HiDif".</span></p>
<p>&nbsp;</p>
<p><span style="color: #000000;">If you were writing your own Vertex Update Function, you may need to update how it checks which Index Buffer to write to. &nbsp;It should now simply check the particle system's IsUsingIntegerIndexBuffer property to determine whether to write to the IndexBuffer or IndexBufferShort array.</span></p>
<p>This change was made because even though MonoGame for WinRT does not use the Reach profile, it still needs to use the Short Index Buffer array.</p>
<p>&nbsp;</p>

</td></tr></table>

</body>
</html>
