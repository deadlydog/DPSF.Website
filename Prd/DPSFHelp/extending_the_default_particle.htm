<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<!-- saved from url=(0029)http://www.helpandmanual.com/ -->
<head>
   <title>Extending The Default Particle Classes</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="" />
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
<script type="text/javascript" src="helpman_topicinit.js"></script>
<!-- Redirect browser to frame page if page is not in the content frame. -->
<script type="text/javascript">
<!--
if (location.search.lastIndexOf("toc=0")<=0) {
  if (parent.frames.length==0) { parent.location.href="index.html?extending_the_default_particle.htm"; }
  else { parent.quicksync('a5.3'); }
}
//-->
</script>
<script type="text/javascript" src="highlight.js"></script></head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;" onload="highlight();">
<div id="hmpopupDiv" style="visibility:hidden; position:absolute; z-index:1000; "></div>


<table width="100%" border="0" cellspacing="0" cellpadding="5" bgcolor="#D0D0D0">
  <tr valign="middle">
    <td align="left">
      <p class="p_Heading1"><span class="f_Heading1">Extending The Default Particle Classes</span></p>

    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="introduction.htm">Top</a>&nbsp;
     <a href="creating_new_particle_systems.htm">Previous</a>&nbsp;
     <a href="creating_new_particle_systems_from_scratch.htm">Next</a>
     </span>
    </td>
  </tr>
</table>


<!-- Placeholder for topic body. -->
<table width="100%" border="0" cellspacing="0" cellpadding="5"><tr valign="top"><td align="left">
<p>If you want to use one of the default particle system classes, but find that its corresponding particle class doesn't have all of the particle properties you require, you can create a new particle class that inherits from the default particle system's particle class. &nbsp;When creating the new particle class be sure to override the Reset() and CopyFrom() functions properly. &nbsp;Below is an example of how to extend the default quad particle class to add a Temperature property:</p>
<p>&nbsp;</p>
<p><span style="font-family: 'Courier New'; color: #0000ff;">class</span><span style="font-family: 'Courier New'; color: #000000;"> </span><span style="font-family: 'Courier New'; color: #2b91af;">TemperatureParticle</span><span style="font-family: 'Courier New'; color: #000000;"> : </span><span style="font-family: 'Courier New'; color: #2b91af;">DefaultQuadParticle</span></p>
<p><span style="font-family: 'Courier New'; color: #000000;">{</span></p>
<p> &nbsp; &nbsp; &nbsp; &nbsp;<span style="font-family: 'Courier New'; color: #0000ff;">public</span><span style="font-family: 'Courier New'; color: #000000;"> </span><span style="font-family: 'Courier New'; color: #2b91af;">float</span><span style="font-family: 'Courier New'; color: #000000;"> Temperature;</span></p>
<p>&nbsp;</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp;<span style="font-family: 'Courier New'; color: #0000ff;">public</span><span style="font-family: 'Courier New'; color: #000000;"> </span><span style="font-family: 'Courier New'; color: #0000ff;">override</span><span style="font-family: 'Courier New'; color: #000000;"> </span><span style="font-family: 'Courier New'; color: #0000ff;">void</span><span style="font-family: 'Courier New'; color: #000000;"> Reset()</span></p>
<p> &nbsp; &nbsp; &nbsp; &nbsp;<span style="font-family: 'Courier New'; color: #000000;">{</span></p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style="font-family: 'Courier New'; color: #0000ff;">base</span><span style="font-family: 'Courier New'; color: #000000;">.Reset();</span></p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style="font-family: 'Courier New'; color: #000000;">Temperature = 0.0f;</span></p>
<p> &nbsp; &nbsp; &nbsp; &nbsp;<span style="font-family: 'Courier New'; color: #000000;">}</span></p>
<p>&nbsp;</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp;<span style="font-family: 'Courier New'; color: #0000ff;">public</span><span style="font-family: 'Courier New'; color: #000000;"> </span><span style="font-family: 'Courier New'; color: #0000ff;">override</span><span style="font-family: 'Courier New'; color: #000000;"> </span><span style="font-family: 'Courier New'; color: #0000ff;">void</span><span style="font-family: 'Courier New'; color: #000000;"> CopyFrom(</span><span style="font-family: 'Courier New'; color: #2b91af;">DPSFParticle</span><span style="font-family: 'Courier New'; color: #000000;"> ParticleToCopy)</span></p>
<p><span style="font-family: 'Courier New'; color: #000000;"> &nbsp; &nbsp; &nbsp;{</span></p>
<p><span style="font-family: 'Courier New'; color: #000000;"> &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp; &nbsp;</span><span style="font-family: 'Courier New'; color: #008000;">// Cast the Particle to the type it really is</span></p>
<p><span style="font-family: 'Courier New'; color: #000000;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </span><span style="font-family: 'Courier New'; color: #2b91af;">TemperatureParticle</span><span style="font-family: 'Courier New'; color: #000000;"> cParticleToCopy = (</span><span style="font-family: 'Courier New'; color: #2b91af;">TemperatureParticle</span><span style="font-family: 'Courier New'; color: #000000;">)ParticleToCopy;</span></p>
<p>&nbsp;</p>
<p><span style="font-family: 'Courier New'; color: #000000;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </span><span style="font-family: 'Courier New'; color: #0000ff;">base</span><span style="font-family: 'Courier New'; color: #000000;">.CopyFrom(cParticleToCopy);</span></p>
<p><span style="font-family: 'Courier New'; color: #000000;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Temperature = cParticleToCopy.Temperature;</span></p>
<p> &nbsp; &nbsp; &nbsp; &nbsp;<span style="font-family: 'Courier New'; color: #000000;">}</span></p>
<p><span style="font-family: 'Courier New'; color: #000000;">}</span></p>
<p>&nbsp;</p>
<p>Once you have the new particle class created, instead of having your particle system inherit from the Default particle system class, have it inherit from the DPSF Default particle system class, as these allow you to specify the particle class and vertex structure you want the default particle system class to use. &nbsp;Below is an example of how to declare a particle system class that inherits from the default point sprite particle system and uses the new TemperatureParticle particle class:</p>
<p>&nbsp;</p>
<p><span style="font-family: 'Courier New'; color: #0000ff;">class</span><span style="font-family: 'Courier New'; color: #000000;"> </span><span style="font-family: 'Courier New'; color: #2b91af;">TemperatureParticleSystem</span><span style="font-family: 'Courier New'; color: #000000;"> : </span><span style="font-family: 'Courier New'; color: #2b91af;">DPSFDefaultQuadParticleSystem</span><span style="font-family: 'Courier New'; color: #000000;">&lt;</span><span style="font-family: 'Courier New'; color: #2b91af;">TemperatureParticle</span><span style="font-family: 'Courier New'; color: #000000;">, </span><span style="font-family: 'Courier New'; color: #2b91af;">DefaultQuadParticleVertex</span><span style="font-family: 'Courier New'; color: #000000;">&gt;</span></p>
<p><span style="font-family: 'Courier New'; color: #000000;">{......}</span></p>
<p>&nbsp;</p>
<p>For more examples of extending the default particle classes, see the Box and Image particle systems' source code included in DPSF Demo.</p>
<p>&nbsp;</p>
<p>If you also wish to use custom shaders, you may also <a href="creating_a_new_particle_vertex_structure.htm">create a new particle vertex structure</a> and override the UpdateVertexProperties() function to copy a particle's drawable properties into the vertex buffer.</p>
<p>&nbsp;</p>

</td></tr></table>

</body>
</html>
