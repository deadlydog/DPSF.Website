<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<!-- saved from url=(0029)http://www.helpandmanual.com/ -->
<head>
   <title>Tutorial 5 - The Emitter</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="" />
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
<script type="text/javascript" src="helpman_topicinit.js"></script>
<!-- Redirect browser to frame page if page is not in the content frame. -->
<script type="text/javascript">
<!--
if (location.search.lastIndexOf("toc=0")<=0) {
  if (parent.frames.length==0) { parent.location.href="index.html?tutorial_5___the_emitter.htm"; }
  else { parent.quicksync('a12.6'); }
}
//-->
</script>
<script type="text/javascript" src="highlight.js"></script></head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;" onload="highlight();">
<div id="hmpopupDiv" style="visibility:hidden; position:absolute; z-index:1000; "></div>


<table width="100%" border="0" cellspacing="0" cellpadding="5" bgcolor="#D0D0D0">
  <tr valign="middle">
    <td align="left">
      <p class="p_Heading1"><span class="f_Heading1">Tutorial 5 - The Emitter</span></p>

    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="introduction.htm">Top</a>&nbsp;
     <a href="tutorial_4___particle_system_events.htm">Previous</a>&nbsp;
     <a href="tutorial_6___position__orientation__and_pivot_points.htm">Next</a>
     </span>
    </td>
  </tr>
</table>


<!-- Placeholder for topic body. -->
<table width="100%" border="0" cellspacing="0" cellpadding="5"><tr valign="top"><td align="left">
<p>In this tutorial we will look at the Emitter, which is used to emit particles.</p>
<p>&nbsp;</p>
<p>Load the Tutorial 5 project and open up Game1.cs.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="font-size: 18pt;">Emitting particles using the Emitter</span></p>
<p>&nbsp;</p>
<p>Every DPSF particle system has an <span style="font-weight: bold;">Emitter</span> property. &nbsp;The Emitter can be used to automatically emit particles from the particle system; the other option you have to emit particles is to directly call the particle system's <span style="font-weight: bold;">AddParticle()</span> or <span style="font-weight: bold;">AddParticles()</span> functions.</p>
<p>&nbsp;</p>
<p>The Emitter's <span style="font-weight: bold;">ParticlesPerSecond</span> property is used to determine what rate the Emitter should emit particles at. &nbsp;If the Emitter's <span style="font-weight: bold;">EmitParticlesAutomatically</span> property is true then the emitter will emit particles forever at the specified rate until the EmitParticlesAutomatically property is set to false. &nbsp;For example, the following code could be placed in the particle system's <span style="font-weight: bold;">LoadParticleSystem()</span> function to have the particle system emit 100 particles per second forever until it is explicitly turned off.</p>
<p>&nbsp;</p>
<p><span style="width:48px">&nbsp;</span><span style="font-family: 'Courier New'; color: #008000;">// Turn the Emitter on to constantly emit 100 Particles Per Second</span></p>
<p><span style="width:48px">&nbsp;</span><span style="font-family: 'Courier New';">Emitter.EmitParticlesAutomatically = </span><span style="font-family: 'Courier New'; color: #0000ff;">true</span><span style="font-family: 'Courier New';">;</span></p>
<p><span style="width:48px">&nbsp;</span><span style="font-family: 'Courier New';">Emitter.ParticlesPerSecond = 100;</span></p>
<p>&nbsp;</p>
<p>If you want to emit a burst of particles, you can set the Emitter's <span style="font-weight: bold;">BurstParticles</span> property to emit a specific number of particles. &nbsp;Similarly, if you want to emit a burst of particles for a certain amount of time (instead of a certain amount of particles), you can set the Emitter's <span style="font-weight: bold;">BurstTime</span> property to the number of seconds that you want it to emit particles for. &nbsp;Both the <span style="font-weight: bold;">BurstParticles</span> and <span style="font-weight: bold;">BurstTime</span> properties will emit particles at the rate corresponding to the <span style="font-weight: bold;">ParticlesPerSecond</span> property. &nbsp;However, <span style="font-weight: bold;">BurstParticles and BurstTime will only emit particles if the EmitParticlesAutomatically property is set to false</span>, since if it is true the particle system will be emitting the particles at the specified rate anyways. &nbsp;If both the BurstParticles and BurstTime properties are set, the Emitter will first emit particles until the BurstTime property reaches zero, and then it will continue to emit particles until the BurstParticles property reaches zero.</p>
<p>&nbsp;</p>
<p>Near the very bottom of <span style="font-weight: bold;">Game1.cs</span>, Tutorial 5 shows how to set the release a burst of particles when the X and C keys are pressed during the simulation (the EmitParticlesAutomatically is set to false when loading the particles system):</p>
<p>&nbsp;</p>
<p><span style="width:48px">&nbsp;</span><span style="font-family: 'Courier New'; color: #008000;">// If the X Key was just pressed</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp;  </span><span style="font-family: 'Courier New'; color: #0000ff;">if</span><span style="font-family: 'Courier New';"> (KeyWasJustPressed(</span><span style="font-family: 'Courier New'; color: #2b91af;">Keys</span><span style="font-family: 'Courier New';">.X))</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp;{</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp; &nbsp;</span><span style="font-family: 'Courier New'; color: #008000;">// Emit 50 particles</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;mcMyParticleSystem.Emitter.BurstParticles = 50;</span></p>
<p><span style="width:48px">&nbsp;</span><span style="font-family: 'Courier New';">}</span></p>
<p>&nbsp;</p>
<p><span style="width:48px">&nbsp;</span><span style="font-family: 'Courier New'; color: #008000;">// If the C Key was just pressed</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp;  </span><span style="font-family: 'Courier New'; color: #0000ff;">if</span><span style="font-family: 'Courier New';"> (KeyWasJustPressed(</span><span style="font-family: 'Courier New'; color: #2b91af;">Keys</span><span style="font-family: 'Courier New';">.C))</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp;{</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp; &nbsp;</span><span style="font-family: 'Courier New'; color: #008000;">// Emit particles for 2 seconds</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;mcMyParticleSystem.Emitter.BurstTime = 2.0f;</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp;}</span></p>
<p>&nbsp;</p>
<p>You may also check the Emitter's BurstParticles property to see how many particles is still has left to emit, and similarly you may check the BurstTime property to see how much longer it will emit particles for.</p>
<p>&nbsp;</p>
<p>To disable the Emitter from emitting any particles, you can set the Emitter's <span style="font-weight: bold;">Enabled</span> property to false. &nbsp;When the Enabled property is false the Emitter will never emit any particles, but the Emitter's Position, Rotation, and Pivot Point information (described below) will still be updated each frame.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="font-size: 18pt;">Emitter's Position, Rotation, and Pivot Point</span></p>
<p>&nbsp;</p>
<p>The particle system's Emitter has built-in position and orientation data. &nbsp;The <span style="font-weight: bold;">Emitter.PositionData</span> property allows you to specify the Emitter's <span style="font-weight: bold;">Position</span>, <span style="font-weight: bold;">Velocity</span>, and <span style="font-weight: bold;">Acceleration</span>. &nbsp;The Emitter's Position and Velocity will be updated according to the Acceleration each time the particle system's <span style="font-weight: bold;">Update()</span> function is called.</p>
<p>&nbsp;</p>
<p>The code near the bottom of Game1.cs shows how to toggle the Emitter's Velocity on and off when the V key is pressed:</p>
<p>&nbsp;</p>
<p><span style="width:48px">&nbsp;</span><span style="font-family: 'Courier New'; color: #008000;">// If the V Key was just pressed</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp;  </span><span style="font-family: 'Courier New'; color: #0000ff;">if</span><span style="font-family: 'Courier New';"> (KeyWasJustPressed(</span><span style="font-family: 'Courier New'; color: #2b91af;">Keys</span><span style="font-family: 'Courier New';">.V))</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp;{</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp; &nbsp;</span><span style="font-family: 'Courier New'; color: #008000;">// If the Emitter is not moving</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </span><span style="font-family: 'Courier New'; color: #0000ff;">if</span><span style="font-family: 'Courier New';"> (mcMyParticleSystem.Emitter.PositionData.Velocity == </span><span style="font-family: 'Courier New'; color: #2b91af;">Vector3</span><span style="font-family: 'Courier New';">.Zero)</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp; &nbsp;</span><span style="font-family: 'Courier New'; color: #008000;">// Make the Emitter move</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;mcMyParticleSystem.Emitter.PositionData.Velocity = </span><span style="font-family: 'Courier New'; color: #0000ff;">new</span><span style="font-family: 'Courier New';"> </span><span style="font-family: 'Courier New'; color: #2b91af;">Vector3</span><span style="font-family: 'Courier New';">(50, 0, 0);</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </span><span style="font-family: 'Courier New'; color: #008000;">// Else the Emitter is moving already</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </span><span style="font-family: 'Courier New'; color: #0000ff;">else</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp; &nbsp;</span><span style="font-family: 'Courier New'; color: #008000;">// So stop the Emitter's movement</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;mcMyParticleSystem.Emitter.PositionData.Velocity = </span><span style="font-family: 'Courier New'; color: #2b91af;">Vector3</span><span style="font-family: 'Courier New';">.Zero;</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</span></p>
<p><span style="width:48px">&nbsp;</span><span style="font-family: 'Courier New';">}</span></p>
<p>&nbsp;</p>
<p>You will likely want to first turn the Emitter on to emit particles automatically by pressing the E key. &nbsp;This will make it easier to see the Emitter's movement. &nbsp;The Emitter may be returned to its default position by pressing the W key.</p>
<p>&nbsp;</p>
<p>Similarly the Emitter has an <span style="font-weight: bold;">Emitter.OrientationData</span> property that can be used to specify the Emitter's <span style="font-weight: bold;">Orientation</span>, <span style="font-weight: bold;">Rotational Velocity</span>, and <span style="font-weight: bold;">Rotational Acceleration</span>. &nbsp;The tutorial also shows how to toggle the Emitter's Rotational Velocity on and off when the B key is pressed:</p>
<p>&nbsp;</p>
<p><span style="width:48px">&nbsp;</span><span style="font-family: 'Courier New'; color: #008000;">// If the B Key was just pressed</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp;  </span><span style="font-family: 'Courier New'; color: #0000ff;">if</span><span style="font-family: 'Courier New';"> (KeyWasJustPressed(</span><span style="font-family: 'Courier New'; color: #2b91af;">Keys</span><span style="font-family: 'Courier New';">.B))</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp;{</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp; &nbsp;</span><span style="font-family: 'Courier New'; color: #008000;">// If the Emitter is not rotating</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </span><span style="font-family: 'Courier New'; color: #0000ff;">if</span><span style="font-family: 'Courier New';"> (mcMyParticleSystem.Emitter.OrientationData.RotationalVelocity == </span><span style="font-family: 'Courier New'; color: #2b91af;">Vector3</span><span style="font-family: 'Courier New';">.Zero)</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp; &nbsp;</span><span style="font-family: 'Courier New'; color: #008000;">// Make the Emitter rotate</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;mcMyParticleSystem.Emitter.OrientationData.RotationalVelocity = </span><span style="font-family: 'Courier New'; color: #0000ff;">new</span><span style="font-family: 'Courier New';"> </span><span style="font-family: 'Courier New'; color: #2b91af;">Vector3</span><span style="font-family: 'Courier New';">(0, 0, </span><span style="font-family: 'Courier New'; color: #2b91af;">MathHelper</span><span style="font-family: 'Courier New';">.Pi);</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </span><span style="font-family: 'Courier New'; color: #008000;">// Else the Emitter is rotating already</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </span><span style="font-family: 'Courier New'; color: #0000ff;">else</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp; &nbsp;</span><span style="font-family: 'Courier New'; color: #008000;">// So stop the Emitter's rotations</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;mcMyParticleSystem.Emitter.OrientationData.RotationalVelocity = </span><span style="font-family: 'Courier New'; color: #2b91af;">Vector3</span><span style="font-family: 'Courier New';">.Zero;</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</span></p>
<p><span style="width:48px">&nbsp;</span><span style="font-family: 'Courier New';">}</span></p>
<p>&nbsp;</p>
<p>Again, you will want to have the Emitter emitting particles automatically by pressing the E key so that it is easy to see the effect that rotating the Emitter has on the particles.</p>
<p>&nbsp;</p>
<p>The Emitter can also be rotated around an arbitrary Pivot Point (some point in 3D space) using the <span style="font-weight: bold;">Emitter.PivotPointData</span> property. &nbsp;It allows you to set the <span style="font-weight: bold;">PivotPoint</span> that the Emitter should rotate around, as well as the <span style="font-weight: bold;">PivotRotationalVelocity</span> and <span style="font-weight: bold;">PivotRotationalAcceleration</span> to control how fast it rotates around the Pivot Point. &nbsp;The tutorial shows how to toggle the Emitter's Pivot Rotational Acceleration on and off when the N key is pressed:</p>
<p>&nbsp;</p>
<p><span style="width:48px">&nbsp;</span><span style="font-family: 'Courier New'; color: #008000;">// If the N Key was just pressed</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp;  </span><span style="font-family: 'Courier New'; color: #0000ff;">if</span><span style="font-family: 'Courier New';"> (KeyWasJustPressed(</span><span style="font-family: 'Courier New'; color: #2b91af;">Keys</span><span style="font-family: 'Courier New';">.N))</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp;{</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp; &nbsp;</span><span style="font-family: 'Courier New'; color: #008000;">// Specify the Pivot Point that the Emitter should rotate around</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;mcMyParticleSystem.Emitter.PivotPointData.PivotPoint = </span><span style="font-family: 'Courier New'; color: #0000ff;">new</span><span style="font-family: 'Courier New';"> </span><span style="font-family: 'Courier New'; color: #2b91af;">Vector3</span><span style="font-family: 'Courier New';">(0, 75, 0);</span></p>
<p>&nbsp;</p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </span><span style="font-family: 'Courier New'; color: #008000;">// If the Emitter is not rotating around the Pivot Point</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </span><span style="font-family: 'Courier New'; color: #0000ff;">if</span><span style="font-family: 'Courier New';"> (mcMyParticleSystem.Emitter.PivotPointData.PivotRotationalAcceleration == </span><span style="font-family: 'Courier New'; color: #2b91af;">Vector3</span><span style="font-family: 'Courier New';">.Zero)</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp; &nbsp;</span><span style="font-family: 'Courier New'; color: #008000;">// Make it Accelerate around the Pivot Point</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;mcMyParticleSystem.Emitter.PivotPointData.PivotRotationalAcceleration = </span><span style="font-family: 'Courier New'; color: #0000ff;">new</span><span style="font-family: 'Courier New';"> </span><span style="font-family: 'Courier New'; color: #2b91af;">Vector3</span><span style="font-family: 'Courier New';">(0, 0, 0.1f);</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </span><span style="font-family: 'Courier New'; color: #008000;">// Else the Emitter is rotating around the Pivot Point already</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </span><span style="font-family: 'Courier New'; color: #0000ff;">else</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;   &nbsp; &nbsp; &nbsp; &nbsp;</span><span style="font-family: 'Courier New'; color: #008000;">// So stop the Emitter from rotating around the Pivot Point</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;mcMyParticleSystem.Emitter.PivotPointData.PivotRotationalVelocity = </span><span style="font-family: 'Courier New'; color: #2b91af;">Vector3</span><span style="font-family: 'Courier New';">.Zero;</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;mcMyParticleSystem.Emitter.PivotPointData.PivotRotationalAcceleration = </span><span style="font-family: 'Courier New'; color: #2b91af;">Vector3</span><span style="font-family: 'Courier New';">.Zero;</span></p>
<p><span style="font-family: 'Courier New';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</span></p>
<p><span style="width:48px">&nbsp;</span><span style="font-family: 'Courier New';">}</span></p>
<p>&nbsp;</p>
<p>If you wanted the Emitter to rotate around another object, you could specify the Emitter's Pivot Point each frame to be the position of the object to rotate around. &nbsp;By default rotating the Emitter around a Pivot Point will affect both the Emitter's Position and Rotation. &nbsp;If you wanted it to only affect the Emitter's Position you could specify to not rotate the Emitter's Orientation by setting the <span style="font-weight: bold;">RotateOrientationToo</span> property to false:</p>
<p>&nbsp;</p>
<p><span style="width:48px">&nbsp;</span><span style="font-family: 'Courier New';">mcMyParticleSystem.Emitter.PivotPointData.RotateOrientationToo = </span><span style="font-family: 'Courier New'; color: #0000ff;">false</span><span style="font-family: 'Courier New';">;</span></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="font-size: 18pt;">Emitting particles according to the Emitter's Position and Orientation</span></p>
<p>&nbsp;</p>
<p>In this tutorial you may have noticed that moving and rotating the Emitter affects where the particles are emitted from, and the direction they are emitted in. &nbsp;During the simulation you can use the Home / End, Delete / Page Down, and Insert / Page Up keys to move the Emitter's Position along the X, Y, and Z axis. &nbsp;You can also use the I / K, J / L, and U / O keys to rotate the emitter around the X, Y, and Z axis.</p>
<p>&nbsp;</p>
<p>This behaviour is defined by the Particle Initialization Function. &nbsp;Open up <span style="font-weight: bold;">MyParticleSystem.cs</span> and locate the <span style="font-weight: bold;">InitializeParticleProperties()</span> function. &nbsp;In this function you should see the line:</p>
<p>&nbsp;</p>
<p><span style="width:48px">&nbsp;</span><span style="font-family: 'Courier New';">cParticle.Position = Emitter.PositionData.Position;</span></p>
<p>&nbsp;</p>
<p>This line specifies that new particles should be emitted from the Emitter's Position. &nbsp;If you don't want the particles to be released from the Position of the Emitter, you could specify an absolute value for the particle's Position, such as Vector3(0, 50, 0).</p>
<p>&nbsp;</p>
<p>Also in that Particle Initialization Function you should see the line:</p>
<p>&nbsp;</p>
<p><span style="width:48px">&nbsp;</span><span style="font-family: 'Courier New';">cParticle.Velocity = </span><span style="font-family: 'Courier New'; color: #2b91af;">Vector3</span><span style="font-family: 'Courier New';">.Transform(cParticle.Velocity, Emitter.OrientationData.Orientation);</span></p>
<p>&nbsp;</p>
<p>This line specifies that the direction the particle should be traveling in should be adjusted according to the Emitter's Orientation. &nbsp;If you don't want the particle's Velocity direction to be based upon the Emitter's Orientation, simply comment out or remove this line from the Particle Initialization Function.</p>
<p>&nbsp;</p>
<p>If you are using the <span style="font-weight: bold;">InitialProperties</span> object to initialize the particles, as described in Tutorial 2, and do not want the new particle's Position to be based on the Emitter's Position, you may set the <span style="font-weight: bold;">InitialProperties.PositionIsAffectedByEmittersPosition</span> property to false. &nbsp;Similarly, if you don't want the particle's Velocity direction to be adjusted according to the Emitter's Orientation, you may set the <span style="font-weight: bold;">InitialProperties.VelocityIsAffectedByEmittersOrientation</span> property to false.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="font-size: 18pt;">Remarks</span></p>
<p>&nbsp;</p>
<p>Play around with changing the Emitter's ParticlesPerSecond property during the simulation (using the + / - keys) and pressing X and C to release bursts of particles to help see the difference between BurstParticles and BurstTime.</p>
<p>&nbsp;</p>

</td></tr></table>

</body>
</html>
